<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Signup</title>
  <!-- Bootstrap CSS -->
  <link rel="icon" href="https://cdn4.vectorstock.com/i/1000x1000/84/88/organic-icon-green-color-vector-3238488.jpg">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .custom-card-shadow {
      box-shadow: 0px 0px 25px; /* Adjust the shadow properties as needed */
    }
    .otp-container {
    display: flex;
}

/* Style for individual OTP input box */
.otp-box {
    width: 40px; /* Adjust width as needed */
    height: 40px; /* Adjust height as needed */
    margin: 0 5px; /* Adjust margin as needed */
    text-align: center;
    font-size: 16px; /* Adjust font size as needed */
    border: 1px solid #ccc;
    border-radius: 5px;
}

/* Style for focused OTP input box */
.otp-box:focus {
    border-color: blue; /* Change border color when focused */
}

/* Hide browser default number spinner */
.otp-box::-webkit-outer-spin-button,
.otp-box::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}
.loginpage{
      background-image: url('https://img.freepik.com/premium-photo/abstract-white-wavy-clothes-background_167650-5864.jpg'); /* Replace 'path/to/your/image.jpg' with the actual path to your image */
      background-size: cover; /* This ensures the image covers the entire div */
      background-position: center;

    }
  </style>
</head>
<body style="background-color: rgb(211, 235, 232);">
  <div class="container mt-2">
    <div class="row justify-content-center">
        <div class="col-lg-5 col-md-9 col-sm-11">
            <div class="card custom-card-shadow loginpage" style="border-radius: 15px; padding-left: 5%; padding-right: 5%;">
                <div class="card-body">
                    <h1 class="text-center" style="font-size: xx-large;">Create Account</h1>

                    <form id="signupForm">
                        <div class="form-group">
                            <label for="name" style="font-weight: 500;">Name</label>
                            <input type="text" class="form-control rounded-pill" id="name" name="name">
                            <span id="name-error" style="color: red;"></span>
                        </div>
                        <div class="form-group">
                            <label for="email" style="font-weight: 500;">Email</label>
                            <input type="email" class="form-control rounded-pill" id="email" name="email">
                            <span id="email-error" style="color: red;"></span>
                        </div>
                        <div class="form-group">
                            <label for="phoneNumber" style="font-weight: 500;">Phone Number</label>
                            <input type="tel" class="form-control rounded-pill" id="phoneNumber" name="phoneNumber">
                            <span id="phoneNumber-error" style="color: red;"></span>
                        </div>
                        <div class="form-group">
                            <label for="password"style="font-weight: 500;">Password</label>
                            <input type="password" class="form-control rounded-pill" id="password" name="password">
                            <span id="password-error" style="color: red;"></span>
                        </div>
                        <div class="form-group">
                            <label for="confirmPassword"style="font-weight: 500;">Confirm Password</label>
                            <input type="password" class="form-control rounded-pill" id="confirmPassword" name="confirmPassword">
                            <span id="confirmPassword-error" style="color: red;"></span>
                        </div>
                        <button type="submit" onclick="validateForm()" class="btn btn-primary btn-block" id="signupButton">Signup</button>
                        <!-- <a href="/auth/google" class="btn btn-danger btn-block mt-3">Sign up with Google</a> -->
                    </form>

                    <p class="text-center mt-3">Already have an account? <a href="/login">Login</a></p>
                    <p class="text-center mt-3" style="color: rgb(255, 4, 4);" id="signupMessage"><%=signupSuccessful %></p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="otpVerifyModal" tabindex="-1" role="dialog" aria-labelledby="otpVerifyModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <!-- <h5 class="modal-title" id="otpVerifyModalLabel">Verify OTP</h5> -->
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          <div class="modal-body">
              <div class="otp-container d-flex justify-content-center">
                  <!-- Create individual input boxes for OTP -->
                  <input type="text" class="otp-box" id="otp1" maxlength="1">
                  <input type="text" class="otp-box" id="otp2" maxlength="1">
                  <input type="text" class="otp-box" id="otp3" maxlength="1">
                  <input type="text" class="otp-box" id="otp4" maxlength="1">
                  <input type="text" class="otp-box" id="otp5" maxlength="1">
                  <input type="text" class="otp-box" id="otp6" maxlength="1">
              </div>
              <input type="hidden" id="otpEmail">
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-primary" id="verifyOTPButton">Verify OTP</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
      </div>
  </div>
</div>
<script>
document.querySelectorAll('.otp-box').forEach(box => {
  box.addEventListener('input', (event) => {
      const input = event.target;
      if (input.value.length === 1) {
          const nextBox = input.nextElementSibling;
          if (nextBox) {
              nextBox.focus();
          }
      }
  });
});
</script>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
     function validateForm() {
      var name = document.getElementById("name").value;
      var email = document.getElementById("email").value;
      var phoneNumber = document.getElementById("phoneNumber").value;
      var password = document.getElementById("password").value;
      var confirmPassword = document.getElementById("confirmPassword").value;
  
      var nameError = document.getElementById("name-error");
      var emailError = document.getElementById("email-error");
      var phoneNumberError = document.getElementById("phoneNumber-error");
      var passwordError = document.getElementById("password-error");
      var confirmPasswordError = document.getElementById("confirmPassword-error");
  
      nameError.innerHTML = "";
      emailError.innerHTML = "";
      phoneNumberError.innerHTML = "";
      passwordError.innerHTML = "";
      confirmPasswordError.innerHTML = "";
  
      var isValid = true;
  
      if (name.trim() === "") {
        nameError.innerHTML = "Name is required.";
        isValid = false;
      } else {
        var nameRegex = /^[a-zA-Z ]+$/;
        if (!nameRegex.test(name)) {
          nameError.innerHTML = "Name should only contain letters";
          isValid = false;
        }
      }
  
      if (email.trim() === "") {
        emailError.innerHTML = "Email is required.";
        isValid = false;
      } else {
        var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          emailError.innerHTML = "Invalid email format.";
          isValid = false;
        }
      }
  
      if (phoneNumber.trim() === "") {
        phoneNumberError.innerHTML = "Phone number is required.";
        isValid = false;
      } else {
        var phoneNumberRegex = /^\d{10}$/;
        if (!phoneNumberRegex.test(phoneNumber)) {
          phoneNumberError.innerHTML = "Invalid phone number format. Please enter in the format: 123-456-7890";
          isValid = false;
        }
      }
  
      if (password.trim() === "") {
        passwordError.innerHTML = "Password is required.";
        isValid = false;
      } else {
        var passwordRegex = /^\d{6,}$/;
        if (!passwordRegex.test(password)) {
          passwordError.innerHTML = "Password must be at least six digits.";
          isValid = false;
        }
      }
  
      if (confirmPassword.trim() === "") {
        confirmPasswordError.innerHTML = "Confirm password is required.";
        isValid = false;
      } else {
        if (confirmPassword !== password) {
          confirmPasswordError.innerHTML = "Passwords do not match.";
          isValid = false;
        }
      }
  
      return isValid;
    }
    
  document.getElementById('signupForm').addEventListener('submit', function(event) {
      event.preventDefault(); // Prevent form submission

      // Get form data
      if (validateForm()) {
      const formData = new FormData(this);

      // Convert formData to object
      const formDataObject = {};
      formData.forEach((value, key) => {
          formDataObject[key] = value;
      });

      // Send form data to the backend using Axios for OTP verification
      axios.post('/login-otp', formDataObject)
          .then(function(response) {
              if (response.status === 200) {
                  alert('OTP sent successfully. Check your email.');
                  // Open the OTP verification modal
                  $('#otpEmail').val(formDataObject.email);
                  $('#otpVerifyModal').modal('show');

                  // Store form data in localStorage to access after OTP verification
                  localStorage.setItem('formData', JSON.stringify(formDataObject));
              }
          })
          .catch(function(error) {
              // Handle errors here
              console.error('Error:', error.response.data);
              $('#signupMessage').text('Error: ' + error.response.data.message);
          });
        }
  });

  // Handle OTP verification
  document.getElementById('verifyOTPButton').addEventListener('click', function() {
    // Retrieve OTP digits from individual input boxes
    const otp1 = document.getElementById('otp1').value;
    const otp2 = document.getElementById('otp2').value;
    const otp3 = document.getElementById('otp3').value;
    const otp4 = document.getElementById('otp4').value;
    const otp5 = document.getElementById('otp5').value;
    const otp6 = document.getElementById('otp6').value;

    // Concatenate OTP digits into a single OTP string
    const otp = otp1 + otp2 + otp3 + otp4 + otp5 + otp6;

    // Retrieve email from hidden input field
    const email = document.getElementById('otpEmail').value;

    // Retrieve form data from localStorage
    const formDataObject = JSON.parse(localStorage.getItem('formData'));

    // Send form data along with OTP verification to the backend
    axios.post('/verify-otp', { email: email, otp: otp, formData: formDataObject })
        .then(function(response) {
            if (response.status === 200) {
                alert('OTP verified successfully. Redirecting...');
                // Redirect user to the homepage or any other desired page
                window.location.href = '/';
            } else {
                alert('Error verifying OTP: ' + response.data.message);
            }
        })
        .catch(function(error) {
            if (error.response) {
                alert('Error verifying OTP: ' + error.response.data.message);
            } else {
                alert('Error verifying OTP: ' + error.message);
            }
        });
      
});
    
</script>


  <!-- Bootstrap JS -->
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <script>

  </script>
</body>
</html>
